import Head from 'next/head';

// Redux
import { login, logout } from '/utils/store/auth/authSlice';
import { useDispatch, useSelector } from 'react-redux';

// MUI
import { Container } from '@mui/system';
import { blue } from '@mui/material/colors';
import { TextField, Button } from '@mui/material';

// Icons
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faListCheck } from '@fortawesome/free-solid-svg-icons';

// React
import { useEffect } from 'react';

export default function Login() {
  const dispatch = useDispatch();
  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);

  // Set MUI variables
  useEffect(() => {
    document.documentElement.style.setProperty(
      '--login-main-border-color',
      blue[400]
    );
    document.documentElement.style.setProperty(
      '--login-main-icon-color',
      blue[700]
    );
  }, []);

  return (
    // <Container className={styles.container}>
    //   <Head>
    //     <title>Login - TaskPlanner</title>
    //     <meta name='description' content='Generated by create next app' />
    //     <link rel='icon' href='/favicon.ico' />
    //   </Head>

    //   <main className={styles.main}>
    //     <h1>{isLoggedIn ? 'LOGGED IN' : 'NOT LOGGED IN'}</h1>
    //     <button
    //       onClick={() => {
    //         isLoggedIn ? dispatch(logout()) : dispatch(login());
    //       }}
    //     >
    //       {isLoggedIn ? 'LOGOUT' : 'LOGIN'}
    //     </button>
    //   </main>
    // </Container>

    <div className='login login__container'>
      <Head>
        <title>Login - TaskPlanner</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className='login__main'>
        <div className='login__main--icon'>
          <FontAwesomeIcon icon={faListCheck} />
        </div>

        <form action='' className='form__container'>
          {/* Email */}
          <TextField
            required
            className='login__input--email'
            label='Email'
            variant='outlined'
          />

          {/* Password */}
          <TextField
            id='login__input--password'
            className='login__input--password'
            label='Password'
            type='password'
            variant='outlined'
          />

          <div className='form__actions'>
            {/* Login */}
            <Button
              className='form__actions--button'
              variant='contained'
              onClick={() => {
                isLoggedIn ? dispatch(logout()) : dispatch(login());
              }}
            >
              {/* Login */}
              {isLoggedIn ? 'Logout' : 'Login'}
            </Button>

            {/* Sign Up */}
            <Button className='form__actions--button' variant='outlined'>
              Sign Up
            </Button>
          </div>

          {/* TODO: DELETE THIS */}
          <h1>{isLoggedIn ? 'LOGGED IN' : 'NOT LOGGED IN'}</h1>
        </form>
      </main>
    </div>
  );
}
